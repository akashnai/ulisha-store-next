name: "CI Build"

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      supabase:
        image: supabase/local-dev:latest
        ports:
          - 54321:54321 # Postgres
          - 54322:54322 # Studio
          - 8000:8000 # API
          - 8080:8080 # Realtime
          - 54323:54323 # Auth
        env:
          SUPABASE_ANON_KEY: "test-anon-key"
          SUPABASE_SERVICE_ROLE_KEY: "test-service-role-key"
          POSTGRES_PASSWORD: "postgres"
        options: >-
          --health-cmd="curl --silent --fail http://localhost:8000/health || exit 1"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=10

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Install dependencies
        run: npm ci

      - name: Wait for Supabase to be ready
        run: |
          for i in {1..20}; do
            if curl -s http://localhost:8000/health | grep '"status":"ok"'; then
              echo "âœ… Supabase is ready!"
              break
            fi
            echo "Waiting for Supabase..."
            sleep 3
          done

      - name: Set environment for local Supabase
        run: |
          echo "NEXT_PUBLIC_SUPABASE_URL=http://localhost:8000" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=test-anon-key" >> $GITHUB_ENV
          echo "SUPABASE_SERVICE_ROLE_KEY=test-service-role-key" >> $GITHUB_ENV
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:54322/postgres" >> $GITHUB_ENV

      - name: Install Supabase CLI
        run: npm install -g supabase

      - name: Run database migrations
        run: supabase db push --db-url "postgresql://postgres:postgres@localhost:54322/postgres"

      - name: Run linter
        run: npm run lint

      - name: Build project
        run: npm run build
